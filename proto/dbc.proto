syntax = "proto3";

package dbc;

// Сервис для парсинга DBC фреймов
service DBCParserService {
  rpc ParseFrame(ParseFrameRequest) returns (ParseFrameResponse);
  rpc ParseBatch(ParseBatchRequest) returns (stream ParseFrameResponse);
  rpc GetDBCInfo(Empty) returns (DBCInfoResponse);
  rpc HealthCheck(Empty) returns (HealthResponse);
}

message ParseFrameRequest {
  string frame_data = 1;    // hex string 24 chars
  string timestamp = 2;     // ISO timestamp (optional)
}

message ParseFrameResponse {
  int32 device_address = 1;
  int32 message_id = 2;
  string message_name = 3;
  string signals_json = 4;  // JSON string для простоты
  string raw_payload = 5;
  bool crc_valid = 6;
  bool parsed = 7;
  string error = 8;
  string timestamp = 9;
}

message ParseBatchRequest {
  repeated ParseFrameRequest frames = 1;
}

message DBCInfoResponse {
  string dbc_file = 1;
  int32 total_messages = 2;
  string messages_json = 3;  // JSON string с mapping
  string loaded_at = 4;
}

message HealthResponse {
  string status = 1;
  bool dbc_loaded = 2;
  int32 uptime_seconds = 3;
}

message Empty {}
